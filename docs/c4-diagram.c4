specification {
  element actor
  element system
  element component
}

model {
  customer = actor 'User' {
    description 'User of the social network'
    style {
      shape person
    }
  }

  saas = system 'Social Network' {
    component ui 'Frontend' {
      description 'Web interface for users'
      style {
        icon tech:nodejs
        shape browser
      }
    }
    
    backend = component 'Backend Services' {
      description 'Implements business logic and exposes functionality as REST API'
      style {
        icon tech:python
      }
      
      component api_gateway 'API Gateway' {
        description 'Routes requests to backend services'
      }
      
      component user_service 'User Service' {
        description 'Manages user registration, authentication, and profiles'
        component user_service_api 'User API' {
          description 'REST API for user operations'
        }
      }
      
      component user_db 'User Database' {
        description 'PostgreSQL database for user information'
        style {
          shape storage
          icon tech:postgresql
        }
      }
      
      component stats_service 'Statistics Service' {
        description 'Aggregates statistics such as likes, comments, and views'
        component stats_api 'Statistics API' {
          description 'REST API for statistics'
        }
      }
      
      component stats_db 'Statistics Database' {
        description 'ClickHouse database for storing statistics'
        style {
          shape storage
        }
      }
      
      component events_broker 'Events Broker' {
        description 'Kafka events broker for asynchronous message passing'
        style {
          shape queue
          icon tech:kafka
        }
      }
      
      component posts_comments_service 'Posts & Comments Service' {
        description 'Handles creation and deletion of posts and comments'
        component posts_comments_api 'Posts & Comments API' {
          description 'REST API for posts and comments'
        }
      }
      
      component posts_comments_db 'Posts & Comments Database' {
        description 'PostgreSQL database for posts and comments'
        style {
          shape storage
          icon tech:postgresql
        }
      }
      
      events_broker -> stats_service 'Sends event data'
      api_gateway -> events_broker 'Forwards likes, posts, views'
      user_service_api -> user_db 'Fetches user data'
      api_gateway -> user_service_api 'Handles authentication & registration'
      api_gateway -> stats_api 'Requests statistics'
      stats_api -> stats_db 'Queries statistics'
      api_gateway -> posts_comments_api 'Manages posts and comments'
      posts_comments_api -> posts_comments_db 'Stores posts and comments'
    }
    
    ui -> api_gateway 'Sends HTTPS requests'
  }

  customer -> ui 'Accesses via browser'
}

views {

  view index {
    title 'Landscape view'
    include *
  }

  view saas of saas {
    include *
    
    style * {
      opacity 25%
    }
    style customer {
      color muted
    }
  }
}
